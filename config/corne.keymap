#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define LOWER 1
#define RAISE 2

/ {

  conditional_layers {
      compatible = "zmk,conditional-layers";
      tri_layer {
          if-layers = <1 2>;
          then-layer = <3>;
      };
  };

  macros {
      down_15: down_15 {
          label = "down_15";
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings
              = <&macro_tap &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN &kp DOWN>;
      };

      up_15: up_15 {
          label = "down_15";
          compatible = "zmk,behavior-macro";
          #binding-cells = <0>;
          bindings
              = <&macro_tap &kp UP &kp UP &kp UP &kp UP &kp UP &kp UP &kp UP &kp UP &kp UP &kp UP &kp UP &kp UP &kp UP &kp UP &kp UP>;
      };
  };


  keymap {
    compatible = "zmk,keymap";

    Base_layer {
      bindings = <
        &kp TAB          &kp Q        &kp W        &kp E            &kp R              &kp T                &kp Y                 &kp U             &kp I             &kp O        &kp P         &kp BACKSPACE 
        &kp LEFT_ALT     &kp A        &kp S        &kp D            &kp F              &kp G                &kp H                 &kp J             &kp K             &kp L        &kp SEMICOLON &kp SINGLE_QUOTE 
        &kp LEFT_CONTROL &kp Z        &kp X        &kp C            &kp V              &kp B                &kp N                 &kp M             &kp COMMA         &kp PERIOD   &kp SLASH     &kp DEL 
                                                   &kp LEFT_SHIFT   &mo LOWER          &kp RETURN           &kp SPACE             &mo RAISE         &kp RIGHT_GUI 
      >;
    };

    Lower_layer {
      bindings = <
        &trans           &kp F1       &kp F2       &kp F3           &kp F4             &kp F5               &kp F6                &kp F7            &kp F8            &kp F9       &kp F10       &trans 
        &trans           &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3     &kp NUMBER_4       &kp NUMBER_5         &kp NUMBER_6          &kp NUMBER_7      &kp NUMBER_8      &kp NUMBER_9 &kp NUMBER_0  &kp BACKSLASH 
        &trans           &kp GRAVE    &none        &kp LEFT_BRACKET &kp LEFT_BRACE     &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp RIGHT_BRACE   &kp RIGHT_BRACKET &kp MINUS    &kp EQUAL     &trans 
                                                   &trans           &trans             &trans               &trans                &trans            &trans 
      >;
    };

    Raise_layer {
      bindings = <
        &trans           &none        &none        &none            &up_15             &none                &kp HOME              &kp PG_DN         &kp PG_UP         &kp END      &none         &trans 
        &trans           &none        &none        &none            &none              &none                &kp LEFT              &kp DOWN          &kp UP            &kp RIGHT    &kp ESCAPE    &none  
        &trans           &none        &none        &none            &down_15           &none                &kp K_CMENU           &kp C_VOLUME_DOWN &kp C_VOLUME_UP   &none        &none         &trans   
                                                   &trans           &trans             &trans               &trans                &trans            &trans 
      >;
    };

    Tri_layer {
      bindings = <
        &trans           &bt BT_PRV   &bt BT_NXT   &none            &none              &none                &none                 &none             &none             &none        &none         &trans 
        &trans           &bt BT_SEL 1 &bt BT_SEL 2 &none            &none              &none                &none                 &none             &none             &none        &none         &none 
        &trans           &bt BT_SEL 3 &bt BT_SEL 4 &none            &none              &bt BT_CLR           &none                 &none             &none             &none        &none         &trans 
                                                   &trans           &trans             &trans               &trans                &trans            &trans 
      >;
    };

  };
};